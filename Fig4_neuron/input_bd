# 2D Brownian dynamics
#
clear
log log.lammps
#
# set variables
variable	Nrlc equal 1000000000
variable        Nbrownian equal 10000
variable        myImage equal 100000
variable        myDump equal 10000   # Records Ip, Im, Npfree and Nmfree every this many timesteps
variable        myDumpSnap equal 50000 # Takes a snapshots of ALL positions and velocites every this many timesteps. Warning : heavy data.
variable        mythermo equal 100000
variable        myrestart equal 100000
#
variable        mytemp equal 298   # Temperature
variable        z equal 2          # valency of ions
variable        Qf equal 0        # surface charge
variable        L equal 20000          # length
variable        wNa equal 200000          # width (sodium channel)
variable        wK equal 2000000          # width (potassium channem)
variable        xi equal 138.3       # parameter of potential
variable        xT equal 60.0        # parameter of potential
variable        Np equal 4000        # number of positive ions
variable        Nm equal 4000        # number of negative ions
#variable        Nc equal 0        # surface charges (fixed)
variable	ConvFac equal (8.314*v_mytemp/1000/4.184)	# Not used here
variable	chemvoltNa equal 0.2	#Nernst pot of Na
variable        chemvoltK equal -0.2       #Nernst pot of K
#
variable	igene equal 0.1/1.6/${z}*${L}*1e-5		#Conversion from nA to Angst/fs
variable	Crlc equal 0.0000000000000001/1.6/1.6/${z}*1.38*${mytemp}*${L}*${L}*1e15		#Conversion from F to angstrom squared, with kT factor
#time steps
variable	Dtbrownian equal 5000.0
variable	Dtrlc equal (${Dtbrownian}*${Nbrownian})
#
# set unit and atomic type
units           real      
atom_style      atomic
boundary        p p f     # Boundary conditions, p = periodic (in length and and width), f = force (for z, useless because fixed to 0)
#
# set box and create paticles in the box
region          regNa block 0.0 ${L} $(-v_wNa/2) $(v_wNa/2) -10.0 10.0 units box
region          regK block 0.0 ${L} $(-v_wK/2) $(v_wK/2) 990.0 1010.0 units box
region		regtot union 2 regNa regK
create_box      4 regtot
create_atoms    1 random ${Np} 10033 regNa units box    # sets atoms randomly
create_atoms    2 random ${Nm} 3197 regNa units box
create_atoms    3 random ${Np} 5640 regK units box    # sets atoms randomly
create_atoms    4 random ${Nm} 8984 regK units box
#label           loop
#variable        i loop ${Nc}
#variable        posi equal (v_i-1)*v_w/v_Nc
#create_atoms    3  single $(v_L/2) ${posi} 0.0
#next            i
#jump            input_bd loop
group gpNa type 1              # group of + ions
group gmNa type 2              # group of - ions
group gqNa union gpNa gmNa         # defines the group of all ions (+ or -)
group gpK type 3              # group of + ions
group gmK type 4              # group of - ions
group gqK union gpK gmK         # defines the group of all ions (+ or -)
group gqAll union gqNa gqK
group gpAll union gpNa gpK
group gmAll union gmNa gmK
set     region regNa z 0.0         # forces all particles to stay at z=0
set	region regK z 1000.0
mass            1 23.0       # mass of particles (useless, put any number here)
mass            2 23.0
mass            3 23.0       # mass of particles (useless, put any number here)
mass            4 23.0
#mass            3 23.0
#
# set pairwise interaction
variable        Eint equal (0.592*v_z*v_z*v_xi/v_xT)   # strength of interaction between two ions
variable	C equal 1.0                           # cut-off length in angstrom
#variable        EintQ equal (v_Qf*v_Eint/v_z)           # strength of interaction between ion and fixed charge
pair_style      buck 200.0                              # type of pairwise potential
pair_coeff      1 1 ${Eint} ${xi} ${C}           # interagtion between two + ions
pair_coeff      1 2 $(-v_Eint) ${xi} ${C}         # interaction between + ion and - ion
pair_coeff      2 2 ${Eint} ${xi} ${C}
pair_coeff      3 3 ${Eint} ${xi} ${C}           # interagtion between two + ions
pair_coeff      3 4 $(-v_Eint) ${xi} ${C}         # interaction between + ion and - ion
pair_coeff      4 4 ${Eint} ${xi} ${C}
pair_coeff      1 3 0.0 ${xi} ${C}           # interagtion between two + ions
pair_coeff      1 4 0.0 ${xi} ${C}         # interaction between + ion and - ion
pair_coeff      2 4 0.0 1.0 1.0
pair_coeff	2 3 0.0 1.0 1.0 
#pair_coeff      1 3 $(-v_EintQ) ${xi} 0.0 0.0 0.0       # interaction between + ion and fixed surface charge
#pair_coeff      2 3 ${EintQ} ${xi} 0.0 0.0 0.0
#pair_coeff      3 3 ${Eint} ${xi} 0.0 0.0 0.0
#
# set velocities of particles
velocity        all create ${mytemp} 31767 dist gaussian  # create particles velocity 
velocity        all set 0.0 0.0 0.0                      # set velocities to 0 (useless in the simu)
#
#
#		LOOP         LOOP         LOOP
variable	iC equal 0.0
variable        iNa equal 0.0
variable        iK equal 0.0
variable	U equal 0.001
variable	mU equal -0.001
variable	timephys equal step*${Dtbrownian}
#
variable	varbias equal (v_U)*v_z*0.592
variable	mvarbias equal (v_mU)*v_z*0.592
variable	confinNa atom -(y>v_wNa/2)*1.0+(y<-v_wNa/2)*1.0
variable	confinK atom -(y>v_wK/2)*1.0+(y<-v_wK/2)*1.0
fix	confining_Na gqNa addforce 0.0 v_confinNa 0.0
fix     confining_K gqK addforce 0.0 v_confinK 0.0
fix     Efieldp gpAll addforce v_varbias 0.0 0.0              # extra force felt by + ions due to external field
fix     Efieldm gmAll addforce v_mvarbias 0.0 0.0
#fix    flow gq addforce ${v_flowx} 0.0 0.0             # extra force due to flow
##
## set 2D Langevin dynamics
fix     BD gqAll bd/2D ${mytemp} 9.6 29697
## compute current and density
compute IpNa gpNa reduce sum vx
compute ImNa gmNa reduce sum vx
compute IpK gpK reduce sum vx
compute ImK gmK reduce sum vx
variable INa equal (c_IpNa-c_ImNa)/v_U*(v_U-v_chemvoltNa)
variable IK equal (c_IpK-c_ImK)/v_U*(v_U-v_chemvoltK)
fix aveE all ave/time 1 ${myDump} ${myDump} v_varbias file Efield.txt
fix avet all ave/time 1 ${myDump} ${myDump} v_timephys file time.txt
fix aveIpNa gpNa ave/time 1 ${myDump} ${myDump} c_IpNa file IpNa.txt
fix aveImNa gmNa ave/time 1 ${myDump} ${myDump} c_ImNa file ImNa.txt
fix aveIpK gpK ave/time 1 ${myDump} ${myDump} c_IpK file IpK.txt
fix aveImK gmK ave/time 1 ${myDump} ${myDump} c_ImK file ImK.txt
fix aveiNa gqNa ave/time 1 ${myDump} ${myDump} v_INa file iNa.txt
fix aveiK gqK ave/time 1 ${myDump} ${myDump} v_IK file iK.txt
#fix aveRDF all ave/time 1 ${myDump} ${myDumpSnap} c_RDF[*] file RDF.txt mode vector     #DECOMMENT TO COMPUTE RADIAL (pair-wise) DISTRIBUTION FUNCTION
#
# set time steps
timestep        5000.0
#
# set parameters of Verlet neighbor list
neighbor        50.0 bin
neigh_modify    delay 0 every 1 check yes
#
# set the display format of thermodynamic quantities
thermo          ${mythermo}
thermo_style custom etotal ke temp pe
thermo_modify   line multi format float %25.15f
thermo_modify   lost warn
#
# set time steps for recording restart file
#restart                ${myrestart} restart.*
#
# dump
#dump mydumpImage all image ${myImage} ./*.jpg type type zoom 20.0
#dump_modify mydumpImage adiam 1 50.0 acolor 1 red
#dump_modify mydumpImage adiam 2 50.0 acolor 2 blue
#dump snap all custom ${myDumpSnap} dump_atoms.txt id type x y z vx vy vz         # DECOMMENT THIS LINE FOR VISUALISATION
#
#
#restart ${myDumpSnap} myrestart myrestart2        # DECOMMENT TO CREATE RESTART FILE
#
# Mini 'thermalization' to initiate the value of c_Ip
#variable	Ntherm equal 1000*${Nbrownian}
#run ${Ntherm}
# Kill log file
#
#
#				KILL LOG FILE
#
log none
#
### set external force
###compute        positionx all property/atom x
###variable       flowx atom  $((c_positionx-v_L/2)/v_L*v_flow)
label		looptherm
variable	counttherm loop 0 100
variable        Uold equal ${U}
variable        U equal ${Uold}+${Dtrlc}*(1/${Crlc}*${iC})
variable        mU equal -v_U
variable        iNa equal 0.0 
variable        iK equal 0.0
variable        iC equal -${iNa}-${iK}
###
###
run ${Nbrownian}
###
next            counttherm
jump            input_bd looptherm
###
#
label		loop
variable	count loop 0 ${Nrlc}
#
# set external force
#compute	positionx all property/atom x
#variable	flowx atom  $((c_positionx-v_L/2)/v_L*v_flow)
variable	Uold equal ${U}
variable	U equal ${Uold}+${Dtrlc}*(1/${Crlc}*${iC})
variable	mU equal -v_U
variable	iNa equal f_aveiNa
variable	iK equal f_aveiK
variable	iC equal ${igene}-5*${iNa}-${iK}
#
#
run ${Nbrownian}
#
next		count
jump            input_bd loop
#
clear
